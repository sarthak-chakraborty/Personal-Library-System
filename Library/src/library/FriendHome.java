/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.*;

/**
 *
 * @author USER
 */
public class FriendHome extends javax.swing.JFrame {
    String username;
    static int shelfvar = 1;
    private int flag;
    /**
     * Creates new form FriendHome
     */
    public FriendHome(String username) {
        this.username = username;
        initComponents();
        java.util.Date date = new java.util.Date();
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        jLabel8.setText(dateFormat.format(date).toString());
        flag = 0;
        show_header();

    }

    public void show_header(){
        Connection conn = null;
        
        try{
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            String query = "Select * from friend where user = \'"+username+"\';";
            PreparedStatement st = conn.prepareStatement(query);
            ResultSet rs = st.executeQuery();
            rs.next();
            header.setText("WELCOME " + rs.getString("name").toUpperCase() + " !");
            
            conn.close();
        }
        catch(Exception e){
            System.err.println(e);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultArea = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        bookName = new javax.swing.JTextField();
        bookAuthor = new javax.swing.JTextField();
        bookGenre = new javax.swing.JTextField();
        bookPubYear = new javax.swing.JTextField();
        bookPubHouse = new javax.swing.JTextField();
        bookPrice = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        accntDetails = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        bookSearch = new javax.swing.JButton();
        accntManage = new javax.swing.JButton();
        feedback = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        book = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        ownerLogout = new javax.swing.JButton();
        header = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4), "Search Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        searchResultArea.setColumns(20);
        searchResultArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        searchResultArea.setRows(5);
        jScrollPane1.setViewportView(searchResultArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4), "Enter Book Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Author:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Genre:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Publication Year:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Publication House:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price (Rs.):");

        bookName.setBackground(new java.awt.Color(153, 153, 153));
        bookName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookName.setForeground(new java.awt.Color(255, 255, 255));
        bookName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNameActionPerformed(evt);
            }
        });

        bookAuthor.setBackground(new java.awt.Color(153, 153, 153));
        bookAuthor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookAuthor.setForeground(new java.awt.Color(255, 255, 255));
        bookAuthor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookGenre.setBackground(new java.awt.Color(153, 153, 153));
        bookGenre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookGenre.setForeground(new java.awt.Color(255, 255, 255));
        bookGenre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookPubYear.setBackground(new java.awt.Color(153, 153, 153));
        bookPubYear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookPubYear.setForeground(new java.awt.Color(255, 255, 255));
        bookPubYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookPubHouse.setBackground(new java.awt.Color(153, 153, 153));
        bookPubHouse.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookPubHouse.setForeground(new java.awt.Color(255, 255, 255));
        bookPubHouse.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bookPrice.setBackground(new java.awt.Color(153, 153, 153));
        bookPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookPrice.setForeground(new java.awt.Color(255, 255, 255));
        bookPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(28, 28, 28)
                        .addComponent(bookPrice))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(10, 10, 10)
                        .addComponent(bookPubHouse))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(25, 25, 25)
                        .addComponent(bookPubYear))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(bookGenre))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(bookAuthor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(bookName, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(bookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(bookAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(bookGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(bookPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5))
                    .addComponent(bookPubHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(bookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4), "Account Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        accntDetails.setColumns(20);
        accntDetails.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        accntDetails.setRows(5);
        jScrollPane2.setViewportView(accntDetails);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4), "Account Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        bookSearch.setBackground(new java.awt.Color(0, 153, 204));
        bookSearch.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        bookSearch.setForeground(new java.awt.Color(255, 255, 255));
        bookSearch.setText("Search Book");
        bookSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, new java.awt.Color(0, 153, 153), new java.awt.Color(51, 51, 51), java.awt.Color.black));
        bookSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSearchActionPerformed(evt);
            }
        });

        accntManage.setBackground(new java.awt.Color(0, 153, 204));
        accntManage.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        accntManage.setForeground(new java.awt.Color(255, 255, 255));
        accntManage.setText("View Account");
        accntManage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, new java.awt.Color(0, 153, 153), new java.awt.Color(51, 51, 51), java.awt.Color.black));
        accntManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accntManageActionPerformed(evt);
            }
        });

        feedback.setBackground(new java.awt.Color(0, 153, 204));
        feedback.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        feedback.setForeground(new java.awt.Color(255, 255, 255));
        feedback.setText("Feedback");
        feedback.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, new java.awt.Color(0, 153, 153), new java.awt.Color(51, 51, 51), java.awt.Color.black));
        feedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedbackActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 153, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Check Availability");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, new java.awt.Color(0, 153, 153), new java.awt.Color(51, 51, 51), java.awt.Color.black));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(accntManage, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(feedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accntManage, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(feedback, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4), "Account Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jComboBox1.setBackground(new java.awt.Color(102, 102, 102));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Borrow Book", "Return Book" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Book :");

        book.setBackground(new java.awt.Color(153, 153, 153));
        book.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        book.setForeground(new java.awt.Color(255, 255, 255));
        book.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jLabel7)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jPanel7.setBackground(new java.awt.Color(255, 102, 0));

        ownerLogout.setBackground(new java.awt.Color(204, 51, 0));
        ownerLogout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ownerLogout.setForeground(new java.awt.Color(255, 255, 255));
        ownerLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/close.png"))); // NOI18N
        ownerLogout.setText("Logout");
        ownerLogout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.darkGray));
        ownerLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ownerLogoutActionPerformed(evt);
            }
        });

        header.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        header.setText("WELCOME");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jComboBox2.setBackground(new java.awt.Color(204, 51, 0));
        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Change Password", "Delete Account" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(140, 140, 140)
                .addComponent(header)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(ownerLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(header)
                        .addComponent(ownerLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void setBook(String bookname){
        book.setText(bookname);
    }
    
    public void setDetails(String book, String author, String genre, int pubyear, String pubhouse, double price){
        bookName.setText(book);
        bookAuthor.setText(author);
        bookGenre.setText(genre);
        bookPubYear.setText(Integer.toString(pubyear));
        bookPubHouse.setText(pubhouse);
        bookPrice.setText(Double.toString(price));
    }
    
    public void searchBookClick(){
        ActionEvent e = null;
        bookSearchActionPerformed(e);
    }
    
    public void borrowBookClick(){
        ActionEvent e = null;
        jComboBox1.setSelectedItem("Borrow Book");
        jComboBox1ActionPerformed(e);
    }
    
    public void returnBookClick(){
        ActionEvent e = null;
        jComboBox1.setSelectedItem("Return Book");
        jComboBox1ActionPerformed(e);
    }
    
    public int getflag(){
        return this.flag;
    }
    
    private void ownerLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ownerLogoutActionPerformed
        this.dispose();
    }//GEN-LAST:event_ownerLogoutActionPerformed

    private void bookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNameActionPerformed

    private void bookSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSearchActionPerformed
        Connection conn = null;
        
        try{
            searchResultArea.setText(null);
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            String bookname = bookName.getText();
            String bookauthor = bookAuthor.getText();
            String bookgenre = bookGenre.getText();
            String bookyears = bookPubYear.getText();
            String bookpub = bookPubHouse.getText();
            String bookprices = bookPrice.getText();
            int bookyear; double bookprice;
            if(bookyears.equals(""))
                bookyear = -1;
            else
                bookyear = Integer.parseInt(bookyears);
            
            if(bookprices.equals(""))
                bookprice = -1.0;
            else
                bookprice = Double.parseDouble(bookprices);
            
            if((bookyear >= 0  || bookprice >= 0.0) || (bookyears.equals("") && bookprices.equals(""))){
                    String str = "";
                    if(!bookname.equals(""))
                        str = str + "book_name=" + "\'" + bookname + "\'";
                    if(!bookauthor.equals("")){
                        if(str.equals(""))
                            str = str + "book_author=" + "\'" + bookauthor + "\'";
                        else
                            str = str + " and book_author=" + "\'" + bookauthor + "\'";
                    }
                    if(!bookgenre.equals("")){
                        if(str.equals(""))
                            str = str + "book_genre=" + "\'" + bookgenre + "\'";
                        else
                            str = str + " and book_genre=" + "\'" + bookgenre + "\'";
                    }
                    if(!bookpub.equals("")){
                        if(str.equals(""))
                            str = str + "book_pub=" + "\'" + bookpub + "\'";
                        else
                            str = str + " and book_pub=" + "\'" + bookpub + "\'";
                    }
                    if(bookyear != -1){
                        if(str.equals(""))
                            str = str + "book_year=" + bookyear;
                        else
                            str = str + " and book_year=" + bookyear;
                    }
                    if(bookprice != -1.0){
                        if(str.equals(""))
                            str = str + "book_price=" + bookprice;
                        else
                            str = str + " and book_price=" + bookprice;
                    }
                    String query = "Select * from book where " + str + ";";
                     
                    PreparedStatement st = conn.prepareStatement(query);
                    ResultSet rs = st.executeQuery();
                    if(!rs.next()){
                        JOptionPane.showMessageDialog(null,
                            "No such Result found. Try again.",
                            "Search Failed",
                            JOptionPane.ERROR_MESSAGE);
                        bookName.setText(null);
                        bookAuthor.setText(null);
                        bookGenre.setText(null);
                        bookPubYear.setText(null);
                        bookPubHouse.setText(null);
                        bookPrice.setText(null);
                    }
                    rs.beforeFirst();
                    searchResultArea.append("\t   Library\n ==============================\n\n");
                    while(rs.next()){
                        int bid = rs.getInt("book_id");
                        String bname = rs.getString("book_name");
                        String bauthor = rs.getString("book_author");
                        String bgenre = rs.getString("book_genre");
                        int byear = rs.getInt("book_year");
                        String bpub = rs.getString("book_pub");
                        double bprice = rs.getDouble("book_price");
                        int bshelf = rs.getInt("shelf");
                        
                        searchResultArea.append(" Book: " + bname + "\n Author: " + bauthor
                        + "\n Book id: " + bid + "\n Genre: " + bgenre + "\n Publishing Year: " + byear + "\n Publisher: "
                        + bpub + "\n Shelf: " + bshelf + "\n ==============================\n\n");
                        
                        flag = 1;
                    }                  
                    
                    conn.close();
                    bookName.setText(null);
                    bookAuthor.setText(null);
                    bookGenre.setText(null);
                    bookPubYear.setText(null);
                    bookPubHouse.setText(null);
                    bookPrice.setText(null);
                    
            }
            else{
                JOptionPane.showMessageDialog(null,
                    "Enter Valid Pub. Year / Book Price",
                    "Add Book Failed",
                    JOptionPane.ERROR_MESSAGE);
            }  
        }catch(Exception e){
            System.err.println(e);
        }
       
    }//GEN-LAST:event_bookSearchActionPerformed

    private void accntManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accntManageActionPerformed
        Connection conn = null;
        
        try{
            accntDetails.setText(null);
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            String query1 = "Select accnt_no from friend where user = \'" + username + "\';";
            PreparedStatement st = conn.prepareStatement(query1);
            ResultSet rs = st.executeQuery();
            
            while(rs.next()){
                int accntno = rs.getInt("accnt_no");
                String query2 = "Select * from frnd_accnt where accntid=?;";
                PreparedStatement stmt = conn.prepareStatement(query2);
                stmt.setInt(1,accntno);
                ResultSet r = stmt.executeQuery();
                if(!r.next()){
                    accntDetails.append(" No transactions yet\n in this account.\n\n");
                }
                else{
                    r.beforeFirst();
                    while(r.next()){
                        accntDetails.append("\tYour Account\n=========================\n\n"
                                + " Book Issued: "+r.getString("book_issued")+"\n Due Date: "+r.getDate("due_date")+"\n\n");
                    }
                }      
            } 
            conn.close();
        }
        catch(Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_accntManageActionPerformed

    private void feedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedbackActionPerformed
       Feedback obj = new Feedback(username);
       obj.setVisible(true);
    }//GEN-LAST:event_feedbackActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Connection conn = null;
        
        try{
            searchResultArea.setText(null);
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            String bookname = bookName.getText();
            String bookauthor = bookAuthor.getText();
            String bookgenre = bookGenre.getText();
            String bookyears = bookPubYear.getText();
            String bookpub = bookPubHouse.getText();
            String bookprices = bookPrice.getText();
            int bookyear; double bookprice;
            if(bookyears.equals(""))
                bookyear = -1;
            else
                bookyear = Integer.parseInt(bookyears);
            
            if(bookprices.equals(""))
                bookprice = -1.0;
            else
                bookprice = Double.parseDouble(bookprices);
            
            if((bookyear >= 0  || bookprice >= 0.0) || (bookyears.equals("") && bookprices.equals(""))){
                    String str = "";
                    if(!bookname.equals(""))
                        str = str + "book_name=" + "\'" + bookname + "\'";
                    if(!bookauthor.equals("")){
                        if(str.equals(""))
                            str = str + "book_author=" + "\'" + bookauthor + "\'";
                        else
                            str = str + "and book_author=" + "\'" + bookauthor + "\'";
                    }
                    if(!bookgenre.equals("")){
                        if(str.equals(""))
                            str = str + "book_genre=" + "\'" + bookgenre + "\'";
                        else
                            str = str + "and book_genre=" + "\'" + bookgenre + "\'";
                    }
                    if(!bookpub.equals("")){
                        if(str.equals(""))
                            str = str + "book_pub=" + "\'" + bookpub + "\'";
                        else
                            str = str + "and book_pub=" + "\'" + bookpub + "\'";
                    }
                    if(bookyear != -1){
                        if(str.equals(""))
                            str = str + "book_year=" + bookyear;
                        else
                            str = str + "and book_year=" + bookyear;
                    }
                    if(bookprice != -1.0){
                        if(str.equals(""))
                            str = str + "book_price=" + bookprice;
                        else
                            str = str + "and book_price=" + bookprice;
                    }
                    String query = "Select * from book where " + str + ";";
                     
                    PreparedStatement st = conn.prepareStatement(query);
                    ResultSet rs = st.executeQuery();
                    if(!rs.next()){
                        searchResultArea.append(" Sorry.\n Book having the entered fields\n"
                                + " are not available.\n You can lodge a complaint in the \n feedback tab.");
                        bookName.setText(null);
                        bookAuthor.setText(null);
                        bookGenre.setText(null);
                        bookPubYear.setText(null);
                        bookPubHouse.setText(null);
                        bookPrice.setText(null);
                    }
                    else{
                    rs.beforeFirst();
                    searchResultArea.append("\t   Library\n"
                            + " Book having the entered field \n is avialable\n ==============================\n\n");
                    while(rs.next()){
                       int bid = rs.getInt("book_id");
                        String bname = rs.getString("book_name");
                        String bauthor = rs.getString("book_author");
                        int bshelf = rs.getInt("shelf");
                        
                        searchResultArea.append(" Book: " + bname + "\n Author: " + bauthor
                        + "\n Book id: " + bid + "\n Shelf: " + bshelf + "\n ==============================\n\n");
                        
                    }                  
                    
                    conn.close();
                    bookName.setText(null);
                    bookAuthor.setText(null);
                    bookGenre.setText(null);
                    bookPubYear.setText(null);
                    bookPubHouse.setText(null);
                    bookPrice.setText(null);
                    }
            }
            else{
                JOptionPane.showMessageDialog(null,
                    "Enter Valid Pub. Year / Book Price",
                    "Add Book Failed",
                    JOptionPane.ERROR_MESSAGE);
            }  
        }catch(Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        Connection conn = null;
        
        try{
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            if(jComboBox1.getSelectedItem().equals("Borrow Book")){
                String bookname = book.getText();
                if(bookname.equals("")){
                    JOptionPane.showMessageDialog(null,
                       "Enter a book name and then select the item.");
                }
                else{
                    String query1 = "Insert into notif (user, book_issue) values(?,?);";
                    PreparedStatement st = conn.prepareStatement(query1);
                    st.setString(1,username);
                    st.setString(2,bookname);
                    st.execute();
                    JOptionPane.showMessageDialog(null,
                       "Notification added. \nWait for owner to respond and add book to your account.");
                    
                    book.setText("");
                }
            }
            else{
                String bookname = book.getText();
                if(bookname.equals("")){
                    JOptionPane.showMessageDialog(null,
                       "Enter a book name and then select the item.");
                    flag = 0;
                }
                else{
                    String query1 = "Select * from frnd_accnt where book_issued = ?;";
                    PreparedStatement st = conn.prepareStatement(query1);
                    st.setString(1, bookname);
                    ResultSet rs = st.executeQuery();
                    if(!rs.next()){
                        JOptionPane.showMessageDialog(null,
                            "You dont have any book by that name.");
                        flag = 0;
                    }
                    else{
                        rs.beforeFirst();
                        while(rs.next()){
                            String query2 = "Delete from frnd_accnt where book_issued = ?;";
                            PreparedStatement stmt = conn.prepareStatement(query2);
                            stmt.setString(1, bookname);
                            stmt.execute();
                            query2 = "Select * from nonav_books where book_name = \'" + bookname + "\';";
                            stmt = conn.prepareStatement(query2);
                            ResultSet r = stmt.executeQuery();
                            r.next();
                            query2 = "Insert into book (book_name, book_author, book_genre, book_year, book_pub, book_price, shelf)"
                                    + " values (?,?,?,?,?,?,?);";
                            stmt = conn.prepareStatement(query2);
                            String author = r.getString("book_author");
                            stmt.setString(1, r.getString("book_name"));
                            stmt.setString(2, r.getString("book_author"));
                            stmt.setString(3, r.getString("book_genre"));
                            stmt.setInt(4, r.getInt("book_year"));
                            stmt.setString(5, r.getString("book_pub"));
                            stmt.setFloat(6, r.getFloat("book_price"));
                            stmt.setInt(7, 0);
                            stmt.execute();
                            query1 = "Select book_id from book where book_name=?;";
                            stmt = conn.prepareStatement(query1);
                            stmt.setString(1, bookname);
                            r = stmt.executeQuery();
                            if(r.next()){
                                int id = r.getInt("book_id");
                                shelfvar += (id - 1) / 10;
                                query1 = "Update book set shelf=?;";
                                st = conn.prepareStatement(query1);
                                st.setInt(1, shelfvar);
                                st.executeUpdate();
                            }
                            query1 = "Delete from nonav_books where book_name = \'" + bookname + "\' and book_author = \'"
                                     + author + "\';";
                            st = conn.prepareStatement(query1);
                            st.executeUpdate();
                            flag = 1;
                        }
                        JOptionPane.showMessageDialog(null,
                           "Account Updated.");
                        book.setText("");
                    }
                } 
            }
            conn.close();
        }
        catch(Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        Connection conn = null;
        
        try{
            String myDriver = "org.gjt.mm.mysql.Driver";
            Class.forName(myDriver);
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/library","root","Srth#hak1715");
            if(jComboBox2.getSelectedItem().equals("Delete Account")){
                int choice = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete?");
                if(choice == JOptionPane.YES_OPTION){
                    String query = "Delete from friend where user = \'" + username + "\';";
                    PreparedStatement st = conn.prepareStatement(query);
                    st.executeUpdate();
                    query = "Delete from frnd_accnt where user = \'" + username + "\';";
                    st = conn.prepareStatement(query);
                    st.executeUpdate();
                    query = "Delete from notif where user = \'" + username + "\';";
                    st = conn.prepareStatement(query);
                    st.executeUpdate();
                    this.dispose();
                }
            }
            else{
                changePassword obj = new changePassword("Friend", username);
                obj.setVisible(true);
            }
            conn.close();
        }
        catch(Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FriendHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FriendHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FriendHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FriendHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FriendHome(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea accntDetails;
    private javax.swing.JButton accntManage;
    private javax.swing.JTextField book;
    private javax.swing.JTextField bookAuthor;
    private javax.swing.JTextField bookGenre;
    private javax.swing.JTextField bookName;
    private javax.swing.JTextField bookPrice;
    private javax.swing.JTextField bookPubHouse;
    private javax.swing.JTextField bookPubYear;
    private javax.swing.JButton bookSearch;
    private javax.swing.JButton feedback;
    private javax.swing.JLabel header;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton ownerLogout;
    private javax.swing.JTextArea searchResultArea;
    // End of variables declaration//GEN-END:variables
}
